from pip._vendor.packaging.version import parse as parse_version

from pip._internal.models.link import Link
from pip._internal.utils.models import KeyBasedCompareMixin


class InstallationCandidate(KeyBasedCompareMixin):
<<<<<<< HEAD
    """Represents a potential "candidate" for installation.
    """
=======
    """Represents a potential "candidate" for installation."""
>>>>>>> 944ac1b1fd5f18e0b61fc7e94de6936c476276a1

    __slots__ = ["name", "version", "link"]

    def __init__(self, name: str, version: str, link: Link) -> None:
        self.name = name
        self.version = parse_version(version)
        self.link = link

        super().__init__(
            key=(self.name, self.version, self.link),
<<<<<<< HEAD
            defining_class=InstallationCandidate
=======
            defining_class=InstallationCandidate,
>>>>>>> 944ac1b1fd5f18e0b61fc7e94de6936c476276a1
        )

    def __repr__(self) -> str:
        return "<InstallationCandidate({!r}, {!r}, {!r})>".format(
<<<<<<< HEAD
            self.name, self.version, self.link,
        )

    def __str__(self) -> str:
        return '{!r} candidate (version {} at {})'.format(
            self.name, self.version, self.link,
=======
            self.name,
            self.version,
            self.link,
        )

    def __str__(self) -> str:
        return "{!r} candidate (version {} at {})".format(
            self.name,
            self.version,
            self.link,
>>>>>>> 944ac1b1fd5f18e0b61fc7e94de6936c476276a1
        )
